1)
mysql> create table Student(rollnum int,name varchar(20),course varchar(20),year
 int);
Query OK, 0 rows affected (0.30 sec)

mysql> insert into Student values(1,'alan','MCA',2024), (2,'alby','MCA',2024);
Query OK, 2 rows affected (0.06 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> create procedure displays()
    -> begin
    -> select * from Student;
    -> end
    -> //
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ;
mysql> call displays();
+---------+------+--------+------+
| rollnum | name | course | year |
+---------+------+--------+------+
|       1 | alan | MCA    | 2024 |
|       2 | alby | MCA    | 2024 |
+---------+------+--------+------+
2 rows in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

2)

mysql> CREATE PROCEDURE `sum`(IN a INT,IN b INT) BEGIN DECLARE c INT; SET C = a + b; SELECT CONCAT('Sum of two numbers = ' , c)AS Result; END//
Query OK, 0 rows affected (0.01 sec)

mysql>delimiter ;
    -> CALL `sum`(5,10);
+-------------------------+
| Result                  |
+-------------------------+
| Sum of two numbers = 15 |
+-------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

3)
mysql> DELIMITER //
mysql> CREATE PROCEDURE CheckOddOrEven(IN input_number INT)
    -> BEGIN
    -> IF MOD(input_number,2) = 0 THEN
    -> SELECT 'Even' AS result;
    -> ELSE
    -> SELECT 'Odd' AS result;
    -> END IF;
    -> END //
Query OK, 0 rows affected (0.14 sec)

mysql> call CheckOddOrEven(2):
+--------+
| result |
+--------+
| Even   |
+--------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)


4)
mysql> DELIMITER //
mysql> CREATE PROCEDURE Factorial(in a int)
    -> begin
    -> declare f int default 1 ;
    -> while a > 0 do
    -> set f = f * a ;
    -> set a = a - 1 ;
    -> end while ;
    -> SELECT CONCAT('Factorial = ' , f) AS Result ;
    -> end //
Query OK, 0 rows affected (0.03 sec)

mysql> DELIMITER ;
mysql> call Factorial(6) ;
+-----------------+
| Result          |
+-----------------+
| Factorial = 720 |
+-----------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

5)
mysql> CREATE PROCEDURE LargestThree(IN num1 INT, IN num2 INT, IN num3 INT) IF num1 > num2 AND num1 > num3 THEN SELECT num1 AS result; ELSEIF num2 > num3 AND num2 > num1 THEN SELECT num2 AS result; ELSE SELECT num3 AS result; END IF;  END//
Query OK, 0 rows affected (0.00 sec)

mysql> call LargestThree(1,2,3);
    -> //
+--------+
| result |
+--------+
|      3 |
+--------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)



